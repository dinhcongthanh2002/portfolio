import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import "../globals.css";
import AppLayout from "../components/Layout";
import { ConfigProvider } from "antd";
import LoadingScreen from "../components/LoadingScreen";
import enUS from "antd/locale/en_US";
import jaJP from "antd/locale/ja_JP";
// Giả sử bạn có một file vi_VN tự định nghĩa hoặc dùng fallback từ en_US
import viVN from "antd/locale/vi_VN"; // Thay bằng vi_VN nếu có
import { getMessages } from "next-intl/server";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();

  let antdLocale;
  switch (locale) {
    case "en":
      antdLocale = enUS;
      break;
    case "ja":
      antdLocale = jaJP;
      break;
    case "vi":
    default:
      antdLocale = viVN;
      break;
  }
  return (
    <html lang={locale}>
      <body className={`antialiased`}>
        <NextIntlClientProvider messages={messages}>
          <LoadingScreen>
            <ConfigProvider
              theme={{
                token: {
                  colorPrimary: "#ee4d2d", // Đổi màu primary thành màu cam
                  fontFamily: "Roboto, sans-serif", // Gán biến font vào Antd
                  borderRadius: 4, // Bo tròn các góc
                },
                components: {
                  Button: {
                    fontWeight: 500,
                  },
                },
              }}
              locale={antdLocale}
            >
              <AppLayout>{children}</AppLayout>
            </ConfigProvider>
          </LoadingScreen>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
